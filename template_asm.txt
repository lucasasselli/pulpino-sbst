# vim:ft=riscv32asm:foldmethod=marker:foldlevel=0

<<CONFIG>>

REG_LIST_SIZE = 31

.comm saved_regs,REG_LIST_SIZE*4,4
.comm outputs,<<INPUTS_SIZE>>,4
.globl inputs
.data
.align	2
.type	inputs, @object
.size	inputs, <<INPUTS_SIZE>>
inputs:
<<INPUTS>>
.text
.align	2
.globl  insn_test
.type   insn_test , @function

insn_test:
    ################################################## 
    ##  SAVE REGISTERS
    ################################################## 
    # {{{
    lui x5,%hi(saved_regs)
    addi x5,x5,%lo(saved_regs)
    sw x1, 0(x5)
    addi x5,x5,4
    sw x2, 0(x5)
    addi x5,x5,4
    sw x3, 0(x5)
    addi x5,x5,4
    sw x4, 0(x5)
    addi x5,x5,4
    sw x6, 0(x5)
    addi x5,x5,4
    sw x7, 0(x5)
    addi x5,x5,4
    sw x8, 0(x5)
    addi x5,x5,4
    sw x9, 0(x5)
    addi x5,x5,4
    sw x10, 0(x5)
    addi x5,x5,4
    sw x11, 0(x5)
    addi x5,x5,4
    sw x12, 0(x5)
    addi x5,x5,4
    sw x13, 0(x5)
    addi x5,x5,4
    sw x14, 0(x5)
    addi x5,x5,4
    sw x15, 0(x5)
    addi x5,x5,4
    sw x16, 0(x5)
    addi x5,x5,4
    sw x17, 0(x5)
    addi x5,x5,4
    sw x18, 0(x5)
    addi x5,x5,4
    sw x19, 0(x5)
    addi x5,x5,4
    sw x20, 0(x5)
    addi x5,x5,4
    sw x21, 0(x5)
    addi x5,x5,4
    sw x22, 0(x5)
    addi x5,x5,4
    sw x23, 0(x5)
    addi x5,x5,4
    sw x24, 0(x5)
    addi x5,x5,4
    sw x25, 0(x5)
    addi x5,x5,4
    sw x26, 0(x5)
    addi x5,x5,4
    sw x27, 0(x5)
    addi x5,x5,4
    sw x28, 0(x5)
    addi x5,x5,4
    sw x29, 0(x5)
    addi x5,x5,4
    sw x30, 0(x5)
    addi x5,x5,4
    sw x31, 0(x5)
    # }}}

<<BODY>>

    ################################################## 
    ##  RESTORE REGISTERS
    ################################################## 
    # {{{
    lui x5,%hi(saved_regs)
    addi x5,x5,%lo(saved_regs)
    lw x1, 0(x5)
    addi x5,x5,4
    lw x2, 0(x5)
    addi x5,x5,4
    lw x3, 0(x5)
    addi x5,x5,4
    lw x4, 0(x5)
    addi x5,x5,4
    lw x6, 0(x5)
    addi x5,x5,4
    lw x7, 0(x5)
    addi x5,x5,4
    lw x8, 0(x5)
    addi x5,x5,4
    lw x9, 0(x5)
    addi x5,x5,4
    lw x10, 0(x5)
    addi x5,x5,4
    lw x11, 0(x5)
    addi x5,x5,4
    lw x12, 0(x5)
    addi x5,x5,4
    lw x13, 0(x5)
    addi x5,x5,4
    lw x14, 0(x5)
    addi x5,x5,4
    lw x15, 0(x5)
    addi x5,x5,4
    lw x16, 0(x5)
    addi x5,x5,4
    lw x17, 0(x5)
    addi x5,x5,4
    lw x18, 0(x5)
    addi x5,x5,4
    lw x19, 0(x5)
    addi x5,x5,4
    lw x20, 0(x5)
    addi x5,x5,4
    lw x21, 0(x5)
    addi x5,x5,4
    lw x22, 0(x5)
    addi x5,x5,4
    lw x23, 0(x5)
    addi x5,x5,4
    lw x24, 0(x5)
    addi x5,x5,4
    lw x25, 0(x5)
    # }}}

    jr ra
    nop
